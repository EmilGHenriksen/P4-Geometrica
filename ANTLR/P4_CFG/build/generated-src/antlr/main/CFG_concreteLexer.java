// Generated from CFG_concrete.g4 by ANTLR 4.5
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CFG_concreteLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, IntLiteral=40, FloatLiteral=41, StringLiteral=42, BoolLiteral=43, 
		AngleLiteral=44, Type=45, TypeModifier=46, Identifier=47, WS=48;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "IntLiteral", "FloatLiteral", 
		"StringLiteral", "BoolLiteral", "AngleLiteral", "Type", "TypeModifier", 
		"Identifier", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "';'", "'{'", "'}'", "'return'", "'IS'", "'if'", "'('", "')'", "'else'", 
		"'switch'", "'case'", "':'", "'continue;'", "'default'", "'for'", "'foreach'", 
		"'in'", "'loop'", "'while'", "','", "'.'", "'OR'", "'AND'", "'=='", "'!='", 
		"'<'", "'>'", "'<='", "'>='", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'", 
		"'!'", "'PI'", "'['", "']'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, "IntLiteral", "FloatLiteral", "StringLiteral", 
		"BoolLiteral", "AngleLiteral", "Type", "TypeModifier", "Identifier", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CFG_concreteLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CFG_concrete.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\62\u019d\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\3\2\3\2\3\3\3\3\3\4\3\4"+
		"\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3"+
		"\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f"+
		"\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3"+
		"\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3"+
		"\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3"+
		"\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3"+
		"\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3"+
		"\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&"+
		"\3&\3&\3\'\3\'\3(\3(\3)\3)\3)\7)\u00ed\n)\f)\16)\u00f0\13)\5)\u00f2\n"+
		")\3*\3*\3*\7*\u00f7\n*\f*\16*\u00fa\13*\5*\u00fc\n*\3*\3*\6*\u0100\n*"+
		"\r*\16*\u0101\3+\3+\7+\u0106\n+\f+\16+\u0109\13+\3+\3+\3,\3,\3,\3,\3,"+
		"\3,\3,\3,\3,\5,\u0116\n,\3-\3-\3-\7-\u011b\n-\f-\16-\u011e\13-\5-\u0120"+
		"\n-\3-\3-\6-\u0124\n-\r-\16-\u0125\5-\u0128\n-\3-\3-\3-\3-\3-\3-\7-\u0130"+
		"\n-\f-\16-\u0133\13-\5-\u0135\n-\3-\3-\6-\u0139\n-\r-\16-\u013a\5-\u013d"+
		"\n-\3-\3-\3-\5-\u0142\n-\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3."+
		"\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3."+
		"\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3."+
		"\3.\3.\3.\3.\3.\3.\3.\5.\u0188\n.\3/\3/\6/\u018c\n/\r/\16/\u018d\3\60"+
		"\3\60\7\60\u0192\n\60\f\60\16\60\u0195\13\60\3\61\6\61\u0198\n\61\r\61"+
		"\16\61\u0199\3\61\3\61\2\2\62\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13"+
		"\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61"+
		"\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61"+
		"a\62\3\2\n\3\2\63;\3\2\62;\4\2\f\f$$\4\2VVvv\4\2HHhh\5\2C\\aac|\6\2\62"+
		";C\\aac|\4\2\13\f\"\"\u01ba\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3"+
		"\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2"+
		"\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37"+
		"\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3"+
		"\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2"+
		"\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C"+
		"\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2"+
		"\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2"+
		"\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\3c\3\2\2\2\5e\3\2\2\2\7g\3\2\2\2\ti"+
		"\3\2\2\2\13p\3\2\2\2\rs\3\2\2\2\17v\3\2\2\2\21x\3\2\2\2\23z\3\2\2\2\25"+
		"\177\3\2\2\2\27\u0086\3\2\2\2\31\u008b\3\2\2\2\33\u008d\3\2\2\2\35\u0097"+
		"\3\2\2\2\37\u009f\3\2\2\2!\u00a3\3\2\2\2#\u00ab\3\2\2\2%\u00ae\3\2\2\2"+
		"\'\u00b3\3\2\2\2)\u00b9\3\2\2\2+\u00bb\3\2\2\2-\u00bd\3\2\2\2/\u00c0\3"+
		"\2\2\2\61\u00c4\3\2\2\2\63\u00c7\3\2\2\2\65\u00ca\3\2\2\2\67\u00cc\3\2"+
		"\2\29\u00ce\3\2\2\2;\u00d1\3\2\2\2=\u00d4\3\2\2\2?\u00d6\3\2\2\2A\u00d8"+
		"\3\2\2\2C\u00da\3\2\2\2E\u00dc\3\2\2\2G\u00de\3\2\2\2I\u00e0\3\2\2\2K"+
		"\u00e2\3\2\2\2M\u00e5\3\2\2\2O\u00e7\3\2\2\2Q\u00f1\3\2\2\2S\u00fb\3\2"+
		"\2\2U\u0103\3\2\2\2W\u0115\3\2\2\2Y\u0141\3\2\2\2[\u0187\3\2\2\2]\u018b"+
		"\3\2\2\2_\u018f\3\2\2\2a\u0197\3\2\2\2cd\7=\2\2d\4\3\2\2\2ef\7}\2\2f\6"+
		"\3\2\2\2gh\7\177\2\2h\b\3\2\2\2ij\7t\2\2jk\7g\2\2kl\7v\2\2lm\7w\2\2mn"+
		"\7t\2\2no\7p\2\2o\n\3\2\2\2pq\7K\2\2qr\7U\2\2r\f\3\2\2\2st\7k\2\2tu\7"+
		"h\2\2u\16\3\2\2\2vw\7*\2\2w\20\3\2\2\2xy\7+\2\2y\22\3\2\2\2z{\7g\2\2{"+
		"|\7n\2\2|}\7u\2\2}~\7g\2\2~\24\3\2\2\2\177\u0080\7u\2\2\u0080\u0081\7"+
		"y\2\2\u0081\u0082\7k\2\2\u0082\u0083\7v\2\2\u0083\u0084\7e\2\2\u0084\u0085"+
		"\7j\2\2\u0085\26\3\2\2\2\u0086\u0087\7e\2\2\u0087\u0088\7c\2\2\u0088\u0089"+
		"\7u\2\2\u0089\u008a\7g\2\2\u008a\30\3\2\2\2\u008b\u008c\7<\2\2\u008c\32"+
		"\3\2\2\2\u008d\u008e\7e\2\2\u008e\u008f\7q\2\2\u008f\u0090\7p\2\2\u0090"+
		"\u0091\7v\2\2\u0091\u0092\7k\2\2\u0092\u0093\7p\2\2\u0093\u0094\7w\2\2"+
		"\u0094\u0095\7g\2\2\u0095\u0096\7=\2\2\u0096\34\3\2\2\2\u0097\u0098\7"+
		"f\2\2\u0098\u0099\7g\2\2\u0099\u009a\7h\2\2\u009a\u009b\7c\2\2\u009b\u009c"+
		"\7w\2\2\u009c\u009d\7n\2\2\u009d\u009e\7v\2\2\u009e\36\3\2\2\2\u009f\u00a0"+
		"\7h\2\2\u00a0\u00a1\7q\2\2\u00a1\u00a2\7t\2\2\u00a2 \3\2\2\2\u00a3\u00a4"+
		"\7h\2\2\u00a4\u00a5\7q\2\2\u00a5\u00a6\7t\2\2\u00a6\u00a7\7g\2\2\u00a7"+
		"\u00a8\7c\2\2\u00a8\u00a9\7e\2\2\u00a9\u00aa\7j\2\2\u00aa\"\3\2\2\2\u00ab"+
		"\u00ac\7k\2\2\u00ac\u00ad\7p\2\2\u00ad$\3\2\2\2\u00ae\u00af\7n\2\2\u00af"+
		"\u00b0\7q\2\2\u00b0\u00b1\7q\2\2\u00b1\u00b2\7r\2\2\u00b2&\3\2\2\2\u00b3"+
		"\u00b4\7y\2\2\u00b4\u00b5\7j\2\2\u00b5\u00b6\7k\2\2\u00b6\u00b7\7n\2\2"+
		"\u00b7\u00b8\7g\2\2\u00b8(\3\2\2\2\u00b9\u00ba\7.\2\2\u00ba*\3\2\2\2\u00bb"+
		"\u00bc\7\60\2\2\u00bc,\3\2\2\2\u00bd\u00be\7Q\2\2\u00be\u00bf\7T\2\2\u00bf"+
		".\3\2\2\2\u00c0\u00c1\7C\2\2\u00c1\u00c2\7P\2\2\u00c2\u00c3\7F\2\2\u00c3"+
		"\60\3\2\2\2\u00c4\u00c5\7?\2\2\u00c5\u00c6\7?\2\2\u00c6\62\3\2\2\2\u00c7"+
		"\u00c8\7#\2\2\u00c8\u00c9\7?\2\2\u00c9\64\3\2\2\2\u00ca\u00cb\7>\2\2\u00cb"+
		"\66\3\2\2\2\u00cc\u00cd\7@\2\2\u00cd8\3\2\2\2\u00ce\u00cf\7>\2\2\u00cf"+
		"\u00d0\7?\2\2\u00d0:\3\2\2\2\u00d1\u00d2\7@\2\2\u00d2\u00d3\7?\2\2\u00d3"+
		"<\3\2\2\2\u00d4\u00d5\7/\2\2\u00d5>\3\2\2\2\u00d6\u00d7\7-\2\2\u00d7@"+
		"\3\2\2\2\u00d8\u00d9\7,\2\2\u00d9B\3\2\2\2\u00da\u00db\7\61\2\2\u00db"+
		"D\3\2\2\2\u00dc\u00dd\7\'\2\2\u00ddF\3\2\2\2\u00de\u00df\7`\2\2\u00df"+
		"H\3\2\2\2\u00e0\u00e1\7#\2\2\u00e1J\3\2\2\2\u00e2\u00e3\7R\2\2\u00e3\u00e4"+
		"\7K\2\2\u00e4L\3\2\2\2\u00e5\u00e6\7]\2\2\u00e6N\3\2\2\2\u00e7\u00e8\7"+
		"_\2\2\u00e8P\3\2\2\2\u00e9\u00f2\7\62\2\2\u00ea\u00ee\t\2\2\2\u00eb\u00ed"+
		"\t\3\2\2\u00ec\u00eb\3\2\2\2\u00ed\u00f0\3\2\2\2\u00ee\u00ec\3\2\2\2\u00ee"+
		"\u00ef\3\2\2\2\u00ef\u00f2\3\2\2\2\u00f0\u00ee\3\2\2\2\u00f1\u00e9\3\2"+
		"\2\2\u00f1\u00ea\3\2\2\2\u00f2R\3\2\2\2\u00f3\u00fc\7\62\2\2\u00f4\u00f8"+
		"\t\2\2\2\u00f5\u00f7\t\3\2\2\u00f6\u00f5\3\2\2\2\u00f7\u00fa\3\2\2\2\u00f8"+
		"\u00f6\3\2\2\2\u00f8\u00f9\3\2\2\2\u00f9\u00fc\3\2\2\2\u00fa\u00f8\3\2"+
		"\2\2\u00fb\u00f3\3\2\2\2\u00fb\u00f4\3\2\2\2\u00fc\u00fd\3\2\2\2\u00fd"+
		"\u00ff\7\60\2\2\u00fe\u0100\t\3\2\2\u00ff\u00fe\3\2\2\2\u0100\u0101\3"+
		"\2\2\2\u0101\u00ff\3\2\2\2\u0101\u0102\3\2\2\2\u0102T\3\2\2\2\u0103\u0107"+
		"\7$\2\2\u0104\u0106\n\4\2\2\u0105\u0104\3\2\2\2\u0106\u0109\3\2\2\2\u0107"+
		"\u0105\3\2\2\2\u0107\u0108\3\2\2\2\u0108\u010a\3\2\2\2\u0109\u0107\3\2"+
		"\2\2\u010a\u010b\7$\2\2\u010bV\3\2\2\2\u010c\u010d\t\5\2\2\u010d\u010e"+
		"\7t\2\2\u010e\u010f\7w\2\2\u010f\u0116\7g\2\2\u0110\u0111\t\6\2\2\u0111"+
		"\u0112\7c\2\2\u0112\u0113\7n\2\2\u0113\u0114\7u\2\2\u0114\u0116\7g\2\2"+
		"\u0115\u010c\3\2\2\2\u0115\u0110\3\2\2\2\u0116X\3\2\2\2\u0117\u0120\7"+
		"\62\2\2\u0118\u011c\t\2\2\2\u0119\u011b\t\3\2\2\u011a\u0119\3\2\2\2\u011b"+
		"\u011e\3\2\2\2\u011c\u011a\3\2\2\2\u011c\u011d\3\2\2\2\u011d\u0120\3\2"+
		"\2\2\u011e\u011c\3\2\2\2\u011f\u0117\3\2\2\2\u011f\u0118\3\2\2\2\u0120"+
		"\u0127\3\2\2\2\u0121\u0123\7\60\2\2\u0122\u0124\t\3\2\2\u0123\u0122\3"+
		"\2\2\2\u0124\u0125\3\2\2\2\u0125\u0123\3\2\2\2\u0125\u0126\3\2\2\2\u0126"+
		"\u0128\3\2\2\2\u0127\u0121\3\2\2\2\u0127\u0128\3\2\2\2\u0128\u0129\3\2"+
		"\2\2\u0129\u012a\7f\2\2\u012a\u012b\7g\2\2\u012b\u0142\7i\2\2\u012c\u0135"+
		"\7\62\2\2\u012d\u0131\t\2\2\2\u012e\u0130\t\3\2\2\u012f\u012e\3\2\2\2"+
		"\u0130\u0133\3\2\2\2\u0131\u012f\3\2\2\2\u0131\u0132\3\2\2\2\u0132\u0135"+
		"\3\2\2\2\u0133\u0131\3\2\2\2\u0134\u012c\3\2\2\2\u0134\u012d\3\2\2\2\u0135"+
		"\u013c\3\2\2\2\u0136\u0138\7\60\2\2\u0137\u0139\t\3\2\2\u0138\u0137\3"+
		"\2\2\2\u0139\u013a\3\2\2\2\u013a\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013b"+
		"\u013d\3\2\2\2\u013c\u0136\3\2\2\2\u013c\u013d\3\2\2\2\u013d\u013e\3\2"+
		"\2\2\u013e\u013f\7t\2\2\u013f\u0140\7c\2\2\u0140\u0142\7f\2\2\u0141\u011f"+
		"\3\2\2\2\u0141\u0134\3\2\2\2\u0142Z\3\2\2\2\u0143\u0144\7x\2\2\u0144\u0145"+
		"\7q\2\2\u0145\u0146\7k\2\2\u0146\u0188\7f\2\2\u0147\u0148\7d\2\2\u0148"+
		"\u0149\7q\2\2\u0149\u014a\7q\2\2\u014a\u0188\7n\2\2\u014b\u014c\7k\2\2"+
		"\u014c\u014d\7p\2\2\u014d\u0188\7v\2\2\u014e\u014f\7h\2\2\u014f\u0150"+
		"\7n\2\2\u0150\u0151\7q\2\2\u0151\u0152\7c\2\2\u0152\u0188\7v\2\2\u0153"+
		"\u0154\7u\2\2\u0154\u0155\7v\2\2\u0155\u0156\7t\2\2\u0156\u0157\7k\2\2"+
		"\u0157\u0158\7p\2\2\u0158\u0188\7i\2\2\u0159\u015a\7r\2\2\u015a\u015b"+
		"\7q\2\2\u015b\u015c\7k\2\2\u015c\u015d\7p\2\2\u015d\u0188\7v\2\2\u015e"+
		"\u015f\7n\2\2\u015f\u0160\7k\2\2\u0160\u0161\7p\2\2\u0161\u0188\7g\2\2"+
		"\u0162\u0163\7v\2\2\u0163\u0164\7t\2\2\u0164\u0165\7k\2\2\u0165\u0166"+
		"\7c\2\2\u0166\u0167\7p\2\2\u0167\u0168\7i\2\2\u0168\u0169\7n\2\2\u0169"+
		"\u0188\7g\2\2\u016a\u016b\7u\2\2\u016b\u016c\7s\2\2\u016c\u016d\7w\2\2"+
		"\u016d\u016e\7c\2\2\u016e\u016f\7t\2\2\u016f\u0188\7g\2\2\u0170\u0171"+
		"\7e\2\2\u0171\u0172\7n\2\2\u0172\u0173\7q\2\2\u0173\u0174\7u\2\2\u0174"+
		"\u0175\7g\2\2\u0175\u0176\7f\2\2\u0176\u0177\7h\2\2\u0177\u0178\7k\2\2"+
		"\u0178\u0179\7i\2\2\u0179\u017a\7w\2\2\u017a\u017b\7t\2\2\u017b\u0188"+
		"\7g\2\2\u017c\u017d\7e\2\2\u017d\u017e\7k\2\2\u017e\u017f\7t\2\2\u017f"+
		"\u0180\7e\2\2\u0180\u0181\7n\2\2\u0181\u0188\7g\2\2\u0182\u0183\7c\2\2"+
		"\u0183\u0184\7p\2\2\u0184\u0185\7i\2\2\u0185\u0186\7n\2\2\u0186\u0188"+
		"\7g\2\2\u0187\u0143\3\2\2\2\u0187\u0147\3\2\2\2\u0187\u014b\3\2\2\2\u0187"+
		"\u014e\3\2\2\2\u0187\u0153\3\2\2\2\u0187\u0159\3\2\2\2\u0187\u015e\3\2"+
		"\2\2\u0187\u0162\3\2\2\2\u0187\u016a\3\2\2\2\u0187\u0170\3\2\2\2\u0187"+
		"\u017c\3\2\2\2\u0187\u0182\3\2\2\2\u0188\\\3\2\2\2\u0189\u018a\7]\2\2"+
		"\u018a\u018c\7_\2\2\u018b\u0189\3\2\2\2\u018c\u018d\3\2\2\2\u018d\u018b"+
		"\3\2\2\2\u018d\u018e\3\2\2\2\u018e^\3\2\2\2\u018f\u0193\t\7\2\2\u0190"+
		"\u0192\t\b\2\2\u0191\u0190\3\2\2\2\u0192\u0195\3\2\2\2\u0193\u0191\3\2"+
		"\2\2\u0193\u0194\3\2\2\2\u0194`\3\2\2\2\u0195\u0193\3\2\2\2\u0196\u0198"+
		"\t\t\2\2\u0197\u0196\3\2\2\2\u0198\u0199\3\2\2\2\u0199\u0197\3\2\2\2\u0199"+
		"\u019a\3\2\2\2\u019a\u019b\3\2\2\2\u019b\u019c\b\61\2\2\u019cb\3\2\2\2"+
		"\27\2\u00ee\u00f1\u00f8\u00fb\u0101\u0107\u0115\u011c\u011f\u0125\u0127"+
		"\u0131\u0134\u013a\u013c\u0141\u0187\u018d\u0193\u0199\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}